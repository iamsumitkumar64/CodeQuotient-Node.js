<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <title>Socket.IO chat</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            margin: 0;
            padding-bottom: 3rem;
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            background-color: #121212;
            color: #e0e0e0;
        }

        #receiver_detail {
            background: rgba(40, 40, 40, 0.8);
            padding: 0.25rem;
            display: flex;
            height: 3rem;
            backdrop-filter: blur(10px);
            border-bottom: 1px solid #333;
        }

        label {
            font-weight: bolder;
            display: flex;
            justify-content: center;
            align-items: center;
            color: #ffffff;
        }

        #form {
            background: rgba(40, 40, 40, 0.8);
            padding: 0.25rem;
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            display: flex;
            height: 3rem;
            backdrop-filter: blur(10px);
            border-top: 1px solid #333;
        }

        #input,
        .input {
            border: none;
            background-color: #1e1e1e;
            color: #ffffff;
            padding: 0 1rem;
            flex-grow: 1;
            border-radius: 2rem;
            margin: 0.25rem;
        }

        #input:focus,
        .input:focus {
            outline: none;
            background-color: #2a2a2a;
        }

        #form>button {
            background: #2d2d2d;
            border: none;
            padding: 0 1rem;
            margin: 0.25rem;
            border-radius: 3px;
            outline: none;
            color: #ffffff;
            transition: background 0.2s ease;
        }

        #form>button:hover {
            background: #444;
            cursor: pointer;
        }

        #messages {
            list-style-type: none;
            margin: 0;
            padding: 0;
        }

        #messages>li {
            padding: 0.5rem 1rem;
            text-align: right;
            border: 0.5px solid #333;
            background-color: #1a1a1a;
            margin: 0.2rem 1rem;
            border-radius: 5px;
        }

        h1,
        a {
            padding: 3vmin;
            text-align: center;
            background: #1c1c1c;
            color: #ffffff;
            border-bottom: 1px solid #333;
        }
    </style>
</head>

<body>
    <h1>Customer Support Page</h1>
    <ul id="messages"></ul>
    <form id="form">
        <input id="input" />
        <button>Send</button>
        <button id="resolve">Resolve</button>
    </form>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        const form = document.querySelector('#form');
        const messages_list = document.querySelector('#messages');
        let input;

        socket.on('connect', () => {
            messages_list.innerHTML = '';
            socket.emit('eachConnect', getQuery('product_id'), getQuery('userID'), getQuery('sellerID'), getQuery('role'));
        });

        form.addEventListener('submit', (event) => {
            event.preventDefault();
            input = document.querySelector('#input');
            if (input.value) {
                const timestamp = new Date().toLocaleTimeString();
                const message = `<b>${input.value}</b> <br>${timestamp}`;
                socket.emit('client_messages', getQuery('product_id'), getQuery('userID'), getQuery('sellerID'), getQuery('role'), message);
                addMessage2(input.value + `<br>${timestamp}`);
            }
        });

        document.querySelector('#resolve').addEventListener('click', (event) => {
            event.stopPropagation();
            event.preventDefault();
            const productID = getQuery('product_id'), userID = getQuery('userID');
            socket.emit('resolve', getQuery('product_id'), getQuery('userID'), getQuery('sellerID'), getQuery('role'));
            window.location.href = '/';
        });

        socket.on("status", ({ online }) => {
            message = online ? '<h4 align="center">Connected</h4>' : '<h4 align="center">Disconnected</h4>';
            addMessage(message);
        });

        socket.on('allChats', (messages) => {
            messages.forEach((message => {
                addMessage(message);
            }))
        });

        function addMessage(message) {
            const li = document.createElement('li');
            li.innerHTML = message;
            li.style.background = 'rgb(255,255,255)';
            li.style.color = 'rgb(0,0,0)';
            li.style.textAlign = 'left';
            messages_list.append(li);
        }

        function addMessage2(message) {
            const li = document.createElement('li');
            li.innerHTML = message;
            messages_list.append(li);
            input.value = '';
        }

        function getQuery(query) {
            const params = new URLSearchParams(window.location.search);
            return params.get(query) || null;
        }

        // function getProductID() {
        //     let url = new URL(window.location);
        //     url = url.pathname.split('/');
        //     return url[url.length - 1];
        // }
    </script>
</body>

</html>